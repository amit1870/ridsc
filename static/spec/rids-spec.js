// Generated by CoffeeScript 1.4.0
(function(){describe("RIDS Open Source",function(){it("should have a rids object at its root",function(){return expect(rids).toBeDefined()});it("should have an instance of Assets on the rids object",function(){expect(rids.Assets).toBeDefined();expect(rids.Assets).toEqual(jasmine.any(rids.collections.Assets));expect(rids.ActiveAssets).toEqual(jasmine.any(rids.collections.ActiveAssets));return expect(rids.InactiveAssets).toEqual(jasmine.any(rids.collections.InactiveAssets))});describe("Models",function(){it("should exist",function(){return expect(rids.models).toBeDefined()});return describe("Asset model",function(){return it("should exist",function(){return expect(rids.models.Asset).toBeDefined()})})});describe("Collections",function(){it("should exist",function(){return expect(rids.collections).toBeDefined()});return describe("Assets",function(){it("should exist",function(){expect(rids.collections.Assets).toBeDefined();expect(rids.collections.ActiveAssets).toBeDefined();return expect(rids.collections.InactiveAssets).toBeDefined()});it("should use the Asset model",function(){var e;e=new rids.collections.Assets;return expect(e.model).toBe(rids.models.Asset)});return it("should populate ActiveAssets and InactiveAssets when fetched",function(){rids.Assets.reset([{name:"zacharytamas.com",mimetype:"webpage",is_active:!0}]);expect(rids.ActiveAssets.models.length).toEqual(1);expect(rids.InactiveAssets.models.length).toEqual(0);rids.Assets.reset([{name:"zacharytamas.com",mimetype:"webpage",is_active:!1}]);expect(rids.ActiveAssets.models.length).toEqual(0);expect(rids.InactiveAssets.models.length).toEqual(1);rids.Assets.reset([{name:"zacharytamas.com",mimetype:"webpage",is_active:!1},{name:"Hacker News",mimetype:"webpage",is_active:!0}]);expect(rids.ActiveAssets.models.length).toEqual(1);expect(rids.InactiveAssets.models.length).toEqual(1);return expect(rids.Assets.models.length).toEqual(2)})})});return describe("Views",function(){return it("should exist",function(){return expect(rids.views).toBeDefined()})})})}).call(this);